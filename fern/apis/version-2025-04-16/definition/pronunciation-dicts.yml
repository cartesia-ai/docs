types:
  PronunciationDictItem:
    docs: A pronunciation dictionary item mapping text to a custom pronunciation.
    properties:
      text:
        type: string
        docs: The original text to be replaced. All lowercase entries are case-insensitive and title case of the word will be handled automatically. For example, if your entry is "tomato", you do not need to make a new entry for "Tomato". However, entries with mixed case or non-Latin characters are case-sensitive, so if your entry is "LaTeX", it will not apply to "latex".
      pronunciation:
        type: string
        docs: A phonetic representation or text to be said in place of the original text. The pronunciation can be at most 100 characters.
      alias:
        type: optional<string>
        docs: A phonetic representation or text to be said in place of the original text. The alias can be at most 100 characters.
        availability: deprecated

  PronunciationDict:
    docs: A dictionary of unique text-to-pronunciation mappings
    properties:
      id:
        type: string
        docs: Unique identifier for the pronunciation dictionary
      name:
        type: string
        docs: Name of the pronunciation dictionary
      description:
        type: optional<string>
        docs: Description of the pronunciation dictionary
      owner_id:
        type: string
        docs: ID of the user who owns this dictionary
      pinned:
        type: boolean
        docs: Whether this dictionary is pinned for the user
      items:
        type: list<PronunciationDictItem>
        docs: List of unique text-to-pronunciation mappings
      created_at:
        type: string
        docs: ISO 8601 timestamp of when the dictionary was created

  CreatePronunciationDictRequest:
    docs: Request to create a new pronunciation dictionary
    properties:
      name:
        type: string
        docs: Name for the new pronunciation dictionary
      description:
        type: optional<string>
        docs: Description for the new pronunciation dictionary
      items:
        type: optional<list<PronunciationDictItem>>
        docs: Optional initial list of unique pronunciation mappings

  UpdatePronunciationDictRequest:
    docs: Request to update an existing pronunciation dictionary
    properties:
      name:
        type: optional<string>
        docs: New name for the pronunciation dictionary
      description:
        type: optional<string>
        docs: New description for the pronunciation dictionary
      items:
        type: optional<list<PronunciationDictItem>>
        docs: Updated list of unique pronunciation mappings

  PaginatedPronunciationDicts:
    docs: Paginated list of pronunciation dictionaries
    properties:
      data:
        type: list<PronunciationDict>
        docs: List of pronunciation dictionary objects
      has_more:
        type: boolean
        docs: Whether there are more dictionaries available

service:
  base-path: /pronunciation-dicts
  auth: true
  endpoints:
    list:
      docs: List all pronunciation dictionaries for the authenticated user
      path: /
      method: GET
      request:
        name: ListPronunciationDictsRequest
        query-parameters:
          limit:
            type: optional<integer>
            default: 10
            docs: The number of dictionaries to return per page, ranging between 1 and 100.
          starting_after:
            type: optional<string>
            docs: |
              A cursor to use in pagination. `starting_after` is a dictionary ID that defines your
              place in the list. For example, if you make a request and receive 20 objects, ending
              with `dict_abc123`, your subsequent call can include `starting_after=dict_abc123`
              to fetch the next page of the list.
          ending_before:
            type: optional<string>
            docs: |
              A cursor to use in pagination. `ending_before` is a dictionary ID that defines your
              place in the list. For example, if you make a request and receive 20 objects, starting
              with `dict_abc123`, your subsequent call can include `ending_before=dict_abc123`
              to fetch the previous page of the list.
      response: PaginatedPronunciationDicts
      examples:
        - name: List Pronunciation Dictionaries
          response:
            body:
              data:
                - id: "pdict_abc123"
                  name: "My Pronunciation Dictionary"
                  owner_id: "user_abc123"
                  description: "My pronunciation dictionary - Cartesia"
                  pinned: false
                  items:
                    - text: "Cartesia"
                      pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                      alias: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                  created_at: "2025-01-01T00:00:00.000Z"
              has_more: true

    create:
      docs: Create a new pronunciation dictionary
      path: /
      method: POST
      request: CreatePronunciationDictRequest
      response: PronunciationDict
      examples:
        - name: Create Pronunciation Dictionary
          request:
            name: "My Pronunciation Dictionary"
            description: "My pronunciation dictionary - Cartesia"
            items:
              - text: "Cartesia"
                pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
          response:
            body:
              id: "pdict_abc123"
              name: "My Pronunciation Dictionary"
              owner_id: "user_abc123"
              description: "My pronunciation dictionary - Cartesia"
              pinned: false
              items:
                - text: "Cartesia"
                  pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                  alias: "<<k|ɑː|ʈ|iː|z|i|ə>>"
              created_at: "2025-01-01T00:00:00.000Z"

    get:
      docs: Retrieve a specific pronunciation dictionary by ID
      path: /{id}
      method: GET
      path-parameters:
        id:
          type: string
          docs: ID of the pronunciation dictionary to retrieve
      response: PronunciationDict
      examples:
        - name: Get Pronunciation Dictionary
          path-parameters:
            id: "pdict_abc123"
          response:
            body:
              id: "pdict_abc123"
              name: "My Pronunciation Dictionary"
              owner_id: "user_abc123"
              description: "My pronunciation dictionary - Cartesia"
              pinned: false
              items:
                - text: "Cartesia"
                  pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                  alias: "<<k|ɑː|ʈ|iː|z|i|ə>>"
              created_at: "2025-01-01T00:00:00.000Z"

    update:
      docs: Update a pronunciation dictionary
      path: /{id}
      method: PATCH
      path-parameters:
        id:
          type: string
          docs: ID of the pronunciation dictionary to update
      request: UpdatePronunciationDictRequest
      response: PronunciationDict
      examples:
        - name: Update Pronunciation Dictionary
          path-parameters:
            id: "pdict_abc123"
          request:
            name: "My Pronunciation Dictionary"
            description: "My pronunciation dictionary - Cartesia - This is a production dictionary"
            items:
              - text: "Cartesia"
                pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
              - text: "cartesia"
                pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
          response:
            body:
              id: "pdict_abc123"
              name: "My Pronunciation Dictionary"
              owner_id: "user_abc123"
              description: "My pronunciation dictionary - Cartesia - This is a production dictionary"
              pinned: false
              items:
                - text: "Cartesia"
                  pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                  alias: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                - text: "cartesia"
                  pronunciation: "<<k|ɑː|ʈ|iː|z|i|ə>>"
                  alias: "<<k|ɑː|ʈ|iː|z|i|ə>>"
              created_at: "2025-01-01T00:00:00.000Z"

    delete:
      docs: Delete a pronunciation dictionary
      path: /{id}
      method: DELETE
      path-parameters:
        id:
          type: string
          docs: ID of the pronunciation dictionary to delete

    pin:
      docs: Pin a pronunciation dictionary for the authenticated user
      path: /{id}/pin
      method: POST
      path-parameters:
        id:
          type: string
          docs: ID of the pronunciation dictionary to pin

    unpin:
      docs: Unpin a pronunciation dictionary for the authenticated user
      path: /{id}/unpin
      method: POST
      path-parameters:
        id:
          type: string
          docs: ID of the pronunciation dictionary to unpin
