---
info:
  title: Cartesia Stream Speech Interface
  version: 0.1.0
x-topics: []
tags:
  - name: stream-speech
    description: Stream Speech
servers:
  - url: wss://api.cartesia.ai/
    protocol: wss
    x-fern-server-name: Production
channels:
  /tts/websocket:
    description: Generate audio from a transcript using a given voice and model. The audio is returned as a binary clip, i.e. this endpoint streams out raw bytes.
    summary: Stream Speech
    bindings:
      ws: 
        query:
          required: 
            - cartesia_version
            - api_key
          properties: 
            api_key: 
              required: true
              type: string
              description: Your API key.
            cartesia_version: 
              required: true
              type: string
              description: The version of the Cartesia model to use.
              example: "2024-06-10"
              default: "2024-06-10" 
    publish:
      message:
        oneOf:
          - "$ref": "#/components/messages/TTSRequest"
    subscribe:
      message:
        oneOf:
          - $ref: "#/components/messages/WebSocketResponse"
          - $ref: "#/components/messages/Error"
components:
  messages:
    TTSRequest:
      name: TTSRequest
      payload:
        "$ref": "#/components/schemas/TTSRequest"
    StreamInputRequest:
      name: SessionSettings
      payload:
        "$ref": "#/components/schemas/StreamInputRequest"
    WebSocketResponse:
      name: UserInput
      payload:
        "$ref": "#/components/schemas/WebSocketResponse"
    Error:
      name: Error
      payload:
        "$ref": "#/components/schemas/Error"
  schemas:
    TTSRequest:
      type: object
      required: 
        - context_id
        - model_id
        - transcript
        - voice
        - output_format
      properties: 
        context_id: 
          type: string
          description: A unique identifier for the requests belonging to this context. Context id must consist of only alphanumeric characters, hyphens, and underscores.
          example: "happy-monkeys-fly"
        model_id:
          title: Model ID
          type: string
          example: upbeat-moon
        transcript:
          title: Transcript
          type: string
          example: "Hello, world! I'm generating audio on Cartesia."
        duration:
          title: Duration
          description: The maximum duration of the audio in seconds.
          type: integer
          example: 180
        voice:
          title: Voice
          description: The voice to use for the speech. Can be either an ID or an embedding, specified by the `mode` field.
          oneOf:
            - type: object
              title: Voice ID
              properties:
                mode:
                  type: string
                  enum: [id]
                id:
                  type: string
                __experimental_controls:
                  type: object
                  properties:
                    speed:
                      title: Speed
                      description: Controls the speed of the voice.
                      oneOf:
                        - type: string
                          enum: [slowest, slow, normal, fast, fastest]
                        - type: number
                          minimum: -1.0
                          maximum: 1.0
                    emotion:
                      title: Emotion
                      description: Controls the amount of emotion to add to the voice. Accepts an array of `emotion:level` tags.
                      type: array
                      items:
                        type: string
                        pattern: "^(anger|positivity|surprise|sadness|curiosity):(lowest|low|high|highest)$"
              example:
                mode: "id"
                id: &voiceID "a0e99841-438c-4a64-b679-ae501e7d6091"
                __experimental_controls:
                  {
                    speed: "normal",
                    emotion: ["positivity:high", "curiosity"],
                  }
            - type: object
              title: Voice Embedding
              properties:
                mode:
                  type: string
                  enum: [embedding]
                embedding:
                  "$ref": "#/components/schemas/VoiceEmbedding"
                __experimental_controls:
                  type: object
                  properties:
                    speed:
                      title: Speed
                      description: Controls the speed of the voice.
                      oneOf:
                        - type: string
                          enum: [slowest, slow, normal, fast, fastest]
                        - type: number
                          minimum: -1.0
                          maximum: 1.0
                    emotion:
                      title: Emotion
                      description: Controls the amount of emotion to add to the voice. Accepts an array of `emotion:level` tags.
                      type: array
                      items:
                        type: string
                        pattern: "^(anger|positivity|surprise|sadness|curiosity):(lowest|low|high|highest)$"
              example:
                mode: "embedding"
                embedding:
                  &voiceEmbedding [
                    -0.033633083,
                    0.072083704,
                    -0.01807767,
                    -0.083488315,
                    -0.04407617,
                    0.0022592682,
                    0.070505895,
                    0.023946615,
                    -0.04788024,
                    -0.06388413,
                    -0.0716355,
                    -0.0022612812,
                    -0.0053448505,
                    -0.07848381,
                    0.0348162,
                    -0.053745482,
                    -0.092399485,
                    -0.02950225,
                    0.028591828,
                    -0.10556894,
                    0.023313355,
                    0.06224387,
                    0.0362463,
                    0.029258432,
                    0.10769641,
                    0.043595582,
                    -0.058543224,
                    -0.080402784,
                    -0.0953816,
                    -0.008988032,
                    -0.0028981369,
                    -0.004752721,
                    -0.20742874,
                    0.058907595,
                    0.08813939,
                    -0.06192675,
                    0.099082634,
                    -0.09661578,
                    -0.0077761724,
                    -0.013982456,
                    -0.025798267,
                    0.04467142,
                    0.026222011,
                    0.023023574,
                    0.011227064,
                    -0.17462021,
                    -0.09880612,
                    -0.1521035,
                    -0.060464993,
                    -0.04735665,
                    -0.09725187,
                    -0.006127679,
                    0.15818526,
                    -0.039493002,
                    -0.067719474,
                    0.0066190436,
                    -0.10636633,
                    0.17073768,
                    -0.051717706,
                    0.03186961,
                    -0.020547207,
                    -0.02244247,
                    0.013196935,
                    -0.06431055,
                    -0.115360335,
                    0.016918058,
                    -0.033195216,
                    0.11255181,
                    0.020366343,
                    -0.041032124,
                    0.08780918,
                    -0.040567942,
                    0.057276532,
                    0.05848221,
                    -0.077479474,
                    -0.073524915,
                    -0.01913317,
                    -0.029291833,
                    0.11210393,
                    -0.09859328,
                    0.2152541,
                    -0.022976823,
                    0.028627992,
                    -0.039598297,
                    0.041829932,
                    -0.05593181,
                    -0.06444655,
                    -0.018057477,
                    -0.008098263,
                    0.05994528,
                    0.10430693,
                    -0.13121894,
                    -0.06512868,
                    -0.026126215,
                    0.046727825,
                    -0.17180993,
                    -0.10577226,
                    -0.08610466,
                    0.008862588,
                    0.09547498,
                    -0.010965332,
                    -0.061217085,
                    -0.038954042,
                    0.019930292,
                    -0.017192135,
                    0.007296275,
                    0.03273872,
                    0.04389937,
                    -0.056483064,
                    0.003420891,
                    -0.10319067,
                    -0.015706042,
                    0.1308774,
                    -0.0018035866,
                    -0.03582506,
                    0.077131025,
                    0.013398928,
                    0.003188886,
                    0.12039741,
                    -0.033974767,
                    0.06899378,
                    -0.059775922,
                    -0.026934423,
                    0.028482193,
                    0.100996524,
                    0.004498743,
                    -0.02291186,
                    0.078752205,
                    -0.0063796206,
                    0.04206536,
                    0.05721349,
                    0.06290694,
                    0.06130212,
                    0.096969016,
                    -0.057664312,
                    -0.16727506,
                    -0.035220966,
                    0.090760484,
                    0.010039947,
                    0.06513242,
                    0.011055657,
                    -0.004258431,
                    -0.08316792,
                    -0.15650468,
                    -0.076931365,
                    0.11385587,
                    -0.038372636,
                    0.015648656,
                    -0.12029895,
                    -0.06604956,
                    0.009441591,
                    -0.11912808,
                    0.013378132,
                    0.029525978,
                    -0.0056742397,
                    -0.0075976513,
                    0.019999338,
                    -0.05521377,
                    -0.07650746,
                    -0.017710293,
                    -0.033986397,
                    -0.047768556,
                    0.13857274,
                    0.099290825,
                    0.11736938,
                    0.017834296,
                    -0.07140237,
                    -0.052047748,
                    -0.06398965,
                    -0.037033975,
                    -0.061061256,
                    -0.03330076,
                    -0.024472248,
                    -0.059656,
                    0.05359946,
                    -0.043915518,
                    -0.086325996,
                    0.14189173,
                    0.021086395,
                    0.02945159,
                    0.1029604,
                    0.018490415,
                    -0.028736332,
                    -0.025272416,
                    -0.06082937,
                    -0.031339463,
                    -0.0007249595,
                    0.025595888,
                    0.007144545,
                    -0.16938712,
                    -0.1160664,
                    -0.0654145,
                  ]
                __experimental_controls:
                  {
                    speed: "normal",
                    emotion: ["positivity:high", "curiosity"],
                  }
          discriminator:
            propertyName: mode
        output_format:
          title: Output Format
          type: object
          required: 
            - container
            - encoding
            - sample_rate
          properties: 
            container: 
              type: string
              enum: ["raw"]
            encoding: 
              type: string
              enum: ["pcm_s16le", "pcm_f32le", "pcm_mulaw", "pcm_alaw"]
              example: "pcm_s16le"
            sample_rate: 
              type: integer
              enum: [8000, 16000, 22050, 24000, 44100]
              example: 8000
        language: 
          title: Language
          description: "Language of the generation. Options are: `en` (English), `de` (German), `es` (Spanish), `fr` (French), `ja` (Japanese), `pt` (Portuguese), `zh` (Chinese), `hi` (Hindi), `it` (Italian), `ko` (Korean), `nl` (Dutch), `pl` (Polish), `ru` (Russian), `sv` (Swedish), `tr` (Turkish)."
          type: string
          enum: ["en", "de", "es", "fr", "ja", "pt", "zh", "hi", "it", "ko", "nl", "pl", "ru", "sv", "tr"]
        add_timestamps: 
          type: boolean 
          description: Whether to add timestamps to the audio. This is only supported on `tts/sse` and WebSocket endpoints.
          example: false

    Error:
      name: Error Description
      type: string
      example: "error in voice"

    WebSocketResponse:
      properties:
        type: 
          type: string
        done: 
          type: boolean
        status-code: 
          type: number
        step_time: 
          type: number
        context_id: 
          type: string
        data: 
          type: string
        word_timestamps: 
          type: object
          properties: 
            word: 
              type: array
              items: 
                type: string
            start: 
              type: array
              items: 
                type: number
            end: 
              type: array
              items: 
                type: number
      type: object
      example: 
        type: "audio"
        done: true
        status-code: 200
        step_time: 0.1
        context_id: "happy-monkeys-fly"
        data: "base64-encoded-audio"
        word_timestamps: 
          word: ["hello", "world"]
          start: [0.0, 0.5]
          end: [0.5, 1.0]
          
    VoiceEmbedding:
      title: Voice Embedding
      items:
        type: number
      type: array

asyncapi: 2.6.0
