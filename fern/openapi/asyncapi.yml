---
info:
  title: Hume AI Empathic Voice Interface (EVI)
  version: 0.1.313
  description: Chat with Empathic Voice Interface (EVI).
x-topics: []
servers:
  prod:
    url: wss://api.hume.ai/v0/evi
    protocol: wss
channels:
  /tts/websocket:
    description: Generate audio from a transcript using a given voice and model. The audio is returned as a binary clip, i.e. this endpoint streams out raw bytes.
    bindings:
      ws: 
        query:
          required: 
            - cartesia_version
            - api_key
          properties: 
            api_key: 
              type: string
              description: Your API key.
            cartesia_version: 
              type: string
              description: The version of the Cartesia model to use.
              example: "1.0.0"
              default: "2024-06-10" 
    publish:
      message:
        oneOf:
        - "$ref": "#/components/messages/TTSRequest"
        - "$ref": "#/components/messages/StreamInputRequest"
    subscribe:
      message:
        oneOf:
          - $ref: "#/components/messages/WebSocketResponse"
          - $ref: "#/components/messages/Error"
    x-fern-examples:
      - query-parameters:
          api_key: "your-api-key"
          cartesia_version: "2024-06-10"
        messages:
          - messageId: TTSRequest
            type: publish
            value: 
              context_id: "happy-monkeys-fly"
              model_id: "sonic-english"
              transcript: "Hello, world! I'm generating audio on Cartesia."
              duration: 180
              voice:
                mode: "id"
                id: "a0e99841-438c-4a64-b679-ae501e7d6091"
              output_format:
                container: "raw"
                encoding: "pcm_s16le"
                sample_rate: 8000
              language: "en"
              add_timestamps: false
          - messageId: WebSocketResponse
            type: subscribe
            value:
              status_code: 206
              done: false
              type: "chunk"
              data: "aSDinaTvuI8gbWludGxpZnk="
              step_time: 123
              context_id: "happy-monkeys-fly"
components:
  messages:
    TTSRequest:
      name: TTSRequest
      payload:
        "$ref": "#/components/schemas/TTSRequest"
    StreamInputRequest:
      name: SessionSettings
      payload:
        "$ref": "#/components/schemas/StreamInputRequest"
    WebSocketResponse:
      name: UserInput
      payload:
        "$ref": "#/components/schemas/WebSocketResponse"
    Error:
      name: Error
      payload:
        "$ref": "#/components/schemas/Error"
  schemas:
    TTSRequest:
      type: object
      additionalProperties: false
      required: 
        - context_id
        - model_id
        - transcript
      properties: 
        context_id: 
          type: string
          example: "happy-monkeys-fly"
        model_id:
          title: Model ID
          type: string
          example: upbeat-moon
        transcript:
          title: Transcript
          type: string
          example: "Hello, world! I'm generating audio on Cartesia."
        duration:
          title: Duration
          description: The maximum duration of the audio in seconds.
          type: integer
        voice:
          title: Voice
          description: The voice to use for the speech. Can be either an ID or an embedding, specified by the `mode` field.
          oneOf:
            - type: object
              properties:
                mode:
                  type: string
                  enum: [id]
                id:
                  type: string
            - type: object
              properties:
                mode:
                  type: string
                  enum: [embedding]
                embedding:
                  type: array
                  items: 
                    type: number
        output_format:
          title: Output Format
          type: object
          required: [container, encoding, sample_rate]
          properties:
            container:
              type: string
              enum: ["raw"]
            encoding:
              type: string
              enum: ["pcm_s16le", "pcm_f32le", "pcm_mulaw", "pcm_alaw"]
            sample_rate:
              type: integer
              enum: [8000, 16000, 22050, 24000, 44100]

    StreamInputRequest:
      type: object
      required:
        - transcript
        - continue
        - context_id
      properties:
        transcript:
          type: string
          example: "Hello, Sonic!"
        continue:
          type: boolean
          example: true
        context_id:
          type: string
          example: "happy-monkeys-fly"

    Error:
      name: Error Description
      type: string
      example: error in voice

    WebSocketResponse:
      properties:
        type: 
          type: string
        done: 
          type: boolean
        status-code: 
          type: number
        step_time: 
          type: number
        context_id: 
          type: string
        data: 
          type: string
      type: object
    
    Voice:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        is_public:
          type: boolean
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
        embedding:
          type: array
          items:
            type: number
            
      required:
        - id
        - user_id
        - is_public
        - name
        - description
        - created_at
        - embedding

asyncapi: 2.6.0
